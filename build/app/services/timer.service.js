var __decorate=this&&this.__decorate||function(e,t,i,n){if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)return Reflect.decorate(e,t,i,n);switch(arguments.length){case 2:return e.reduceRight(function(e,t){return t&&t(e)||e},t);case 3:return e.reduceRight(function(e,n){return void(n&&n(t,i))},void 0);case 4:return e.reduceRight(function(e,n){return n&&n(t,i,e)||e},n)}},__metadata=this&&this.__metadata||function(e,t){return"object"==typeof Reflect&&"function"==typeof Reflect.metadata?Reflect.metadata(e,t):void 0},angular2_1=require("angular2/angular2"),data_service_1=require("./data.service"),notification_service_1=require("./notification.service"),interfaces_1=require("../interfaces/interfaces"),TimerService=function(){function e(e,t){var i=this;this._dataService=e,this._notificationService=t,this.runningTime$=new angular2_1.Observable(function(e){return i._timerObserver=e}),this.runningTime$.subscribe(),this.stopTimer()}return e.prototype.startTimer=function(e){this.clockRunning?this.stopTimer():(this._startTimer(e),this._selectedTime=e,this.focusRunning=!0)},e.prototype.stopTimer=function(){clearInterval(this._interval),this._runningTime=new Date,this._runningTime.setMinutes(0),this._runningTime.setSeconds(0),this._timerObserver.next(this._runningTime),this.clockRunning=!1},e.prototype._startTimer=function(e){var t=this;this.clockRunning=!0,this._runningTime.setMinutes(e+1),this._runningTime.setSeconds(0),this._interval=setInterval(function(){t._timerFinished()?(t.stopTimer(),t._saveTime()):t._runningTime=new Date(t._runningTime.getTime()-1e3),t._timerObserver.next(t._runningTime)},1e3)},e.prototype._timerFinished=function(){return 0===this._runningTime.getSeconds()&&0===this._runningTime.getMinutes()},e.prototype._saveTime=function(){var e=null,t=null;switch(this._selectedTime){case 1:e=interfaces_1.PhaseType.FOCUS,t="Focus Phase Complete!";break;case 5:e=interfaces_1.PhaseType.SHORT_BREAK,t="Short Break Complete!";break;case 15:e=interfaces_1.PhaseType.LONG_BREAK,t="Long Break Complete!";break;default:e=interfaces_1.PhaseType.CUSTOM_BREAK,t="Custom Brake Complete!"}this._dataService.addFocusPhase({phaseType:e,dateCreated:Firebase.ServerValue.TIMESTAMP}),this._notificationService.openNotification(t)},e=__decorate([angular2_1.Injectable(),__metadata("design:paramtypes",[data_service_1.DataService,notification_service_1.NotificationService])],e)}();exports.TimerService=TimerService;