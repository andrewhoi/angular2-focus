{"version":3,"file":"focus-timer.component.js","sourceRoot":"","sources":["focus-timer.component.ts"],"names":[],"mappings":"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","sourcesContent":["import {Component, OnInit, EventEmitter, Output} from '@angular/core';\nimport { TimerService } from '../../services/timer.service';\nimport { PhaseType } from '../../../interfaces/interfaces';\n\n@Component({\n  moduleId: module.id,\n  selector: 'app-focus-timer',\n  templateUrl: 'focus-timer.component.html',\n  styleUrls: ['focus-timer.component.css']\n})\nexport class FocusTimerComponent implements OnInit {\n  runningTime: Date;\n  @Output() timeCompleted: EventEmitter<boolean | {}>;\n  phaseType: PhaseType;\n  focusRunning: boolean;\n  shortRunning: boolean;\n  longRunning: boolean;\n  clockRunning: boolean;\n\n  private _selectedTime: number;\n  private _interval: any;\n\n  constructor(private _timerService: TimerService) {\n    this.timeCompleted = new EventEmitter();\n    this.runningTime = new Date();\n    this.runningTime.setMinutes(0);\n    this.runningTime.setSeconds(0);\n\n    this.clockRunning = false;\n    this._timerService.runningTime$.subscribe((time: Date) => this._calcTime(time));\n    this.phaseType = this._timerService.runningPhaseType;\n  }\n\n  ngOnInit() {\n  }\n\n  startFocus() {\n    if (this.clockRunning) {\n      this._timerService.stopTimer();\n    } else {\n      this._timerService.startTimer(PhaseType.FOCUS);\n    }\n\n    this.phaseType = this._timerService.runningPhaseType;\n  }\n\n  startShortBreak() {\n    if (this.clockRunning) {\n      this._timerService.stopTimer();\n    } else {\n      this._timerService.startTimer(PhaseType.SHORT_BREAK);\n    }\n\n    this.phaseType = this._timerService.runningPhaseType;\n  }\n\n  startLongBreak() {\n    if (this.clockRunning) {\n      this._timerService.stopTimer();\n    } else {\n      this._timerService.startTimer(PhaseType.LONG_BREAK);\n    }\n\n    this.phaseType = this._timerService.runningPhaseType;\n  }\n\n  private _calcTime(time: Date) {\n    this.runningTime = time;\n    this.clockRunning = true;\n    document.title = `${this.runningTime.getMinutes()}:${this.runningTime.getSeconds()}`;\n\n    if (this.runningTime.getSeconds() === 0 && this.runningTime.getMinutes() === 0) {\n      this.timeCompleted.next(true);\n      this.phaseType = null;\n      this.clockRunning = false;\n      document.title = 'Focus Time Management';\n    }\n  }\n}"]}