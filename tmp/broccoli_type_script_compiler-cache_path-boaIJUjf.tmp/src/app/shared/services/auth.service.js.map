{"version":3,"file":"auth.service.js","sourceRoot":"","sources":["auth.service.ts"],"names":[],"mappings":";;;;;;;;;;AAAA,qBAA2B,eAAe,CAAC,CAAA;AAE3C,QAAO,6BAA6B,CAAC,CAAA;AACrC,6BAAyD,cAAc,CAAC,CAAA;AAExE,2BAAmC,6BAA6B,CAAC,CAAA;AAGjE;IAGI,qBAAoB,YAA0B,EAAU,WAAwB;QAA5D,iBAAY,GAAZ,YAAY,CAAc;QAAU,gBAAW,GAAX,WAAW,CAAa;QAClF,IAAI,CAAC,SAAS,GAAG,YAAY,CAAC;IAC5B,CAAC;IAEJ,2BAAK,GAAL,UAAM,QAAkB;QACvB,EAAE,CAAC,CAAC,QAAQ,KAAK,qBAAQ,CAAC,OAAO,CAAC,CAAC,CAAC;YACnC,IAAI,CAAC,MAAM,CAAC,4BAAa,CAAC,OAAO,CAAC,CAAC;QACpC,CAAC;QAAC,IAAI,CAAC,EAAE,CAAC,CAAC,QAAQ,KAAK,qBAAQ,CAAC,MAAM,CAAC,CAAC,CAAC;YACzC,IAAI,CAAC,MAAM,CAAC,4BAAa,CAAC,MAAM,CAAC,CAAC;QACnC,CAAC;IACF,CAAC;IAED,4BAAM,GAAN;QACC,IAAI,CAAC,YAAY,CAAC,MAAM,EAAE,CAAC;IAC5B,CAAC;IAED,gCAAU,GAAV;QACC,MAAM,CAAC,CAAC,CAAC,IAAI,CAAC,YAAY,CAAC,OAAO,EAAE,CAAC;IACtC,CAAC;IAEO,4BAAM,GAAd,UAAe,QAAuB;QAAtC,iBAOC;QANA,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC;YACvB,QAAQ,EAAE,QAAQ;SAClB,CAAC,CAAC,IAAI,CAAC,UAAC,QAAa;YACrB,QAAQ,CAAC,IAAI,CAAC,KAAK,CAAC,QAAQ,GAAG,IAAI,CAAC,CAAC,eAAe;YACpD,KAAI,CAAC,WAAW,CAAC,MAAM,CAAC,SAAS,GAAG,QAAQ,CAAC,GAAG,GAAG,WAAW,CAAC,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC;QAC/E,CAAC,CAAC,CAAC,KAAK,CAAC,UAAA,GAAG,IAAI,OAAA,OAAO,CAAC,GAAG,CAAC,cAAc,EAAE,GAAG,CAAC,EAAhC,CAAgC,CAAC,CAAC;IACnD,CAAC;IA/BF;QAAC,iBAAU,EAAE;;mBAAA;IAgCb,kBAAC;AAAD,CAAC,AA/BD,IA+BC;AA/BY,mBAAW,cA+BvB,CAAA","sourcesContent":["import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs/Observable';\nimport 'rxjs/add/operator/startWith';\nimport { FirebaseAuth, AuthProviders, AngularFire } from 'angularfire2';\n\nimport { AuthUser, AuthType } from '../../interfaces/interfaces';\n\n@Injectable()\nexport class AuthService {\n\tauthUser$: Observable<any>;\n\n    constructor(private firebaseAuth: FirebaseAuth, private angularFire: AngularFire) {\n\t\tthis.authUser$ = firebaseAuth;\n    }\n\n\tlogin(authType: AuthType) {\n\t\tif (authType === AuthType.TWITTER) {\n\t\t\tthis._login(AuthProviders.Twitter);\n\t\t} else if (authType === AuthType.GITHUB) {\n\t\t\tthis._login(AuthProviders.Github);\n\t\t}\n\t}\n\n\tlogout() {\n\t\tthis.firebaseAuth.logout();\n\t}\n\n\tisLoggedIn() {\n\t\treturn !!this.firebaseAuth.getAuth();\n\t}\n\n\tprivate _login(authType: AuthProviders) {\n\t\tthis.firebaseAuth.login({\n\t\t\tprovider: authType\n\t\t}).then((authData: any) => {\n\t\t\tauthData.auth.token.firebase = null; // remove array\n\t\t\tthis.angularFire.object('/users/' + authData.uid + '/authData').set(authData);\n\t\t}).catch(err => console.log('Login Failed', err));\n\t}\n}"]}