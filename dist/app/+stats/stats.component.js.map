{"version":3,"file":"stats.component.js","sourceRoot":"","sources":["stats.component.ts"],"names":[],"mappings":"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","sourcesContent":["import { Component, OnInit, ViewChild } from '@angular/core';\nimport { Observable } from 'rxjs/Observable';\nimport { FocusPhaseComponent } from '../shared/components/focus-phase';\nimport { DataService } from '../shared/services/data.service';\nimport { AuthService } from '../shared/services/auth.service';\nimport { AuthUser, AuthType, NotificationPermission, PhaseType, FocusPhase } from '../interfaces/interfaces';\n\nimport 'chartjs';\ndeclare let Chart;\n\n@Component({\n  moduleId: module.id,\n  selector: 'app-stats',\n  templateUrl: 'stats.component.html',\n  styleUrls: ['stats.component.css'],\n  directives: [FocusPhaseComponent]\n})\nexport class StatsComponent implements OnInit {\n  @ViewChild('canvas') canvas;\n  graphCreated: boolean = false;\n  user$: any;\n  userSubscription: any;\n  focusSubscription: any;\n  chart: any;\n  totalFocusedTime: number = 0;\n\n  constructor(\n    private authService: AuthService,\n    private dataService: DataService) {\n  }\n\n  ngOnInit() {\n    this.user$ = this.authService.authUser$;\n  }\n\n  ngAfterViewInit() {\n    this.userSubscription = this.authService.authUser$.subscribe(() => {\n      this.focusSubscription = this.dataService.focusPhases$.subscribe((phases: FocusPhase[]) => {\n        this._setUpHistory(phases);\n      });\n    });\n  }\n\n  ngOnDestroy() {\n    this.focusSubscription.unsubscribe();\n    this.userSubscription.unsubscribe();\n  }\n\n  loginTwitter() {\n    this.authService.login(AuthType.TWITTER);\n  }\n\n  loginGithub() {\n    this.authService.login(AuthType.GITHUB);\n  }\n\n  // Yeah, I know working on cleaning this up to a service...\n  private _setUpHistory(phases: FocusPhase[]) {\n    if (phases && this.canvas) {\n      let data = this._createGraphData(phases);\n      let ctx = this.canvas.nativeElement.getContext('2d');\n      let options = { responsive: true };\n\n      this.chart = new Chart(ctx).Line(data, options);\n    }\n  }\n\n  private _createGraphData(phases: any[]) {\n    let labels = [];\n    let data = [];\n    let dates = [];\n\n    let today = new Date();\n    let year = today.getFullYear();\n    let month = today.getMonth();\n    let date = today.getDate();\n\n    for (let i = 0; i < 14; i++) {\n      let day = new Date(year, month, date - i);\n      labels.push(`${day.getUTCDate()}-${day.getUTCMonth() + 1}-${day.getUTCFullYear()}`);\n      dates.push(day);\n      data.push(0);\n    }\n\n    dates.forEach((day, i) => {\n      phases.forEach((phase, j) => {\n        if (this._isSameDay(day, new Date(phase.dateCreated))) {\n          data[i] = data[i] + 1;\n        }\n      });\n    });\n\n    labels.reverse();\n    data.reverse();\n\n    return {\n      labels,\n      datasets: [\n        {\n          label: \"Focus\",\n          fillColor: \"rgba(220,220,220,0.2)\",\n          strokeColor: \"#d76450\",\n          pointColor: \"#d76450\",\n          pointStrokeColor: \"#fff\",\n          pointHighlightFill: \"#d76450\",\n          pointHighlightStroke: \"rgba(220,220,220,1)\",\n          data\n        }\n      ]\n    };\n  }\n\n  private _isSameDay(d1, d2) {\n    if ((d1.getDay() === d2.getDay()) && (d1.getMonth() === d2.getMonth()) && (d1.getYear() === d2.getYear())) {\n      return true;\n    }\n\n    return false;\n  }\n}\n"]}