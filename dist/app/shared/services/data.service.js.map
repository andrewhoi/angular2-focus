{"version":3,"file":"data.service.js","sourceRoot":"","sources":["data.service.ts"],"names":[],"mappings":";;;;;;;;;;AAAA,qBAA2B,eAAe,CAAC,CAAA;AAC3C,2BAA2B,iBAAiB,CAAC,CAAA;AAC7C,6BAA4B,cAAc,CAAC,CAAA;AAE3C,6BAA4B,gBAAgB,CAAC,CAAA;AAI7C;IAGE,qBAAoB,WAAwB,EAAU,WAAwB;QAHhF,iBAoBC;QAjBqB,gBAAW,GAAX,WAAW,CAAa;QAAU,gBAAW,GAAX,WAAW,CAAa;QAC5E,IAAI,CAAC,WAAW,CAAC,SAAS,CAAC,SAAS,CAAC,UAAA,QAAQ,IAAI,OAAA,KAAI,CAAC,QAAQ,GAAG,QAAQ,EAAxB,CAAwB,CAAC,CAAC;IAC7E,CAAC;IAED,sBAAI,qCAAY;aAAhB;YACE,EAAE,CAAC,CAAC,IAAI,CAAC,WAAW,CAAC,UAAU,EAAE,CAAC,CAAC,CAAC;gBAClC,MAAM,CAAC,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,YAAU,IAAI,CAAC,QAAQ,CAAC,GAAG,iBAAc,CAAC,CAAC;YAC1E,CAAC;YAAC,IAAI,CAAC,CAAC;gBACN,MAAM,CAAC,uBAAU,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;YAC3B,CAAC;QACH,CAAC;;;OAAA;IAED,mCAAa,GAAb,UAAc,UAAsB;QAClC,EAAE,CAAC,CAAC,IAAI,CAAC,WAAW,CAAC,UAAU,EAAE,CAAC,CAAC,CAAC;YAClC,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,YAAU,IAAI,CAAC,QAAQ,CAAC,GAAG,iBAAc,CAAC,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;QACpF,CAAC;IACH,CAAC;IApBH;QAAC,iBAAU,EAAE;;mBAAA;IAqBb,kBAAC;AAAD,CAAC,AApBD,IAoBC;AApBY,mBAAW,cAoBvB,CAAA","sourcesContent":["import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs/Observable';\nimport { AngularFire } from 'angularfire2';\n\nimport { AuthService } from './auth.service';\nimport { AuthUser, FocusPhase, PhaseType } from '../../interfaces/interfaces';\n\n@Injectable()\nexport class DataService {\n  private authUser: AuthUser;\n\n  constructor(private angularFire: AngularFire, private authService: AuthService) {\n    this.authService.authUser$.subscribe(authUser => this.authUser = authUser);\n  }\n\n  get focusPhases$(): Observable<FocusPhase[] | any[]> {\n    if (this.authService.isLoggedIn()) {\n      return this.angularFire.list(`/users/${this.authUser.uid}/focusPhases`);\n    } else {\n      return Observable.of([]);\n    }\n  }\n\n  addFocusPhase(focusPhase: FocusPhase) {\n    if (this.authService.isLoggedIn()) {\n      this.angularFire.list(`/users/${this.authUser.uid}/focusPhases`).push(focusPhase);\n    }\n  }\n}"]}